{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","authService","auth","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","form","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlfor","faPlus","vid","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2608f4d6.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_API_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECTID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const authService = firebase.auth();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"../fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n          target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n          provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n          provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n      };\n\n    return(\n      <div className=\"authContainer\">\n        <FontAwesomeIcon\n          icon={faTwitter}\n          color={\"#04AAFF\"}\n          size=\"3x\"\n          style={{ marginBottom: 30 }}\n        />\n            <AuthForm />\n            <div className=\"authBtns\">\n              <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\n              </button>\n              <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\n             </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\"> \n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n        <label htmlfor=\"attach-file\" className=\"factoryInput__label\">\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        vid=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n              id: doc.id,\n              ...doc.data(),\n            }));\n            setNweets(nweetArray);\n          });\n    }, []);\n    \n    return (\n      <div className=\"container\">\n        <NweetFactory userObj={userObj} />\n        <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n            <Nweet\n                key={nweet.id}\n                nweetObj={nweet}\n                isOwner={nweet.creatorId === userObj.uid}\n            />\n        ))}\n        </div>\n      </div>\n    );\n  };\nexport default Home","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n      authService.signOut();\n      history.push(\"/\");\n    };\n    const onChange = (event) => {\n      const {\n        target: { value },\n      } = event;\n      setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      if (userObj.displayName !== newDisplayName) {\n        await userObj.updateProfile({\n          displayName: newDisplayName,\n        });\n        refreshUser();\n      }\n    };\n    return (\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            className=\"formInput\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Profile\"\n              className=\"formBtn\"\n              style={{\n                marginTop: 10,\n              }}\n            />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n    );\n  };\n ","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router , Route, Switch, Redirect} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return(\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ?\n                <div\n                style={{\n                  maxWidth: 890,\n                  width: \"100%\",\n                  margin: \"0 auto\",\n                  marginTop: 80,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n                >\n                    <Route exact path=\"/\">\n                        <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                </div>:\n                <Route exact path=\"/\">  \n                    <Auth/> \n                </Route>\n                }\n            </Switch>\n        </Router>\n    )\n};\n\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport { authService } from \"fbase\";\nimport AppRouter from \"components/Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}